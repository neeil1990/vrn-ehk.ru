{"version":3,"file":"rest.bundle.js","sources":["../src/base.js","../src/basket.js"],"sourcesContent":["class BaseRestHandler\r\n{\r\n    static create(params = {})\r\n    {\r\n        return new this(params);\r\n    }\r\n\r\n    constructor(params = {})\r\n    {\r\n        if (typeof params.store === 'object' && params.store)\r\n        {\r\n            this.store = params.store;\r\n        }\r\n    }\r\n\r\n    execute(command, result, extra = {})\r\n    {\r\n        command = 'handle'+command.split('.').map(element => {\r\n            return element.charAt(0).toUpperCase() + element.slice(1);\r\n        }).join('');\r\n\r\n        if (result.error)\r\n        {\r\n            if (typeof this[command+'Error'] === 'function')\r\n            {\r\n                return this[command+'Error'](result.error, extra);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if (typeof this[command+'Success'] === 'function')\r\n            {\r\n                return this[command+'Success'](result.data, extra);\r\n            }\r\n        }\r\n\r\n        return typeof this[command] === 'function'? this[command](result, extra): null;\r\n    }\r\n}\r\n\r\nexport {BaseRestHandler};","import { BaseRestHandler } from \"./base\";\nimport { Type } from 'main.core';\nimport { EventEmitter } from 'main.core.events'\nimport { EventType } from 'sale.checkout.const';\nimport {\n    Application as ApplicationConst,\n    Property as PropertyConst,\n    Loader as LoaderConst,\n    Pool as PoolConst\n} from 'sale.checkout.const';\n\nexport class BasketRestHandler extends BaseRestHandler\n{\n    handleRecalculateBasket(response, pool)\n    {\n        return new Promise((resolve, reject) =>\n        {\n            if(response.data.needFullRecalculation === 'Y')\n            {\n                EventEmitter.emit(EventType.basket.needRefresh, {})\n            }\n\n            let needRefresh = this.store.getters['basket/getNeedRefresh'];\n\n            this.#setModelBasketForAction(response.data, pool)\n                .then(() => resolve());\n\n            this.#setModelBasketForActionError(response.data)\n                .then(() => resolve());\n\n            if(needRefresh === 'Y')\n            {\n                if(pool.isEmpty())\n                {\n                    this.#setModelBasketByItem(response.data, pool)\n                    EventEmitter.emit(EventType.basket.refreshAfter, {})\n                }\n            }\n        });\n    }\n\n    #setModelBasketByItem(data, pool)\n    {\n        return new Promise((resolve, reject) =>{\n            if(Type.isObject(data) && Type.isArray(data.basketItems))\n            {\n                const items = data.basketItems;\n                const collection = this.store.getters['basket/getBasket'];\n\n                //refresh\n                collection.forEach((fields, index) =>\n                {\n                    let item = this.#findItemById(fields.id, items);\n\n                    if(Type.isObject(item))\n                    {\n                        let fields = this.#prepareBasketItemFields(item);\n\n                        this.#changeBasketItem(fields, index);\n                    }\n                })\n\n                if(Type.isObject(data) && Type.isObject(data.orderPriceTotal))\n                {\n                    this.#refreshModelBasketTotal(data);\n                    this.#refreshModelBasketDiscount(data);\n                }\n            }\n\n            resolve();\n        });\n    }\n\n    #setModelBasketForActionError(data)\n    {\n        return new Promise((resolve, reject) =>\n        {\n            if(Type.isObject(data) && Type.isObject(data.actions))\n            {\n                const actions = data.actions;\n                const collection = this.store.getters['basket/getBasket'];\n\n                let list = this.#prepareBasketErrors(collection, actions)\n\n                if(list.length > 0)\n                {\n                    this.store.commit('basket/setErrors', list);\n                }\n                else\n                {\n                    this.store.commit('basket/clearErrors');\n                }\n            }\n            resolve();\n        });\n    }\n\n    #setModelBasketForAction(data, pool)\n    {\n        return new Promise((resolve, reject) =>\n        {\n            if(Type.isObject(data) && Type.isArray(data.basketItems))\n            {\n                const items = data.basketItems;\n                const actions = data.actions;\n                const collection = this.store.getters['basket/getBasket'];\n                const poolList = pool.get();\n\n                collection.forEach((fields, index) =>\n                {\n                    let item;\n                    let typeAction = this.#getTypeAction(actions, index);\n\n                    if(Type.isString(typeAction))\n                    {\n                        if(typeAction === PoolConst.action.quantity)\n                        {\n                            item = null; //not refresh\n\n                            let exists = this.#hasActionInPool(index, PoolConst.action.quantity, poolList);\n                            if(exists === false)\n                            {\n                                item = this.#findItemById(fields.id, items)\n                            }\n                        }\n                        else if(typeAction === PoolConst.action.restore)\n                        {\n                            item = this.#findItemById(actions[index].fields.id, items)\n                        }\n                        else if(typeAction === PoolConst.action.delete)\n                        {\n                            fields.status = LoaderConst.status.none;\n                            this.#changeBasketItem(fields, index)\n                                .then(()=> EventEmitter.emit(EventType.basket.removeProduct, {index}));\n                        }\n                        else if(typeAction === PoolConst.action.offer)\n                        {\n                            item = null; //not refresh\n\n                            let exists = this.#hasActionInPool(index, PoolConst.action.offer, poolList);\n                            if(exists === false)\n                            {\n                                item = this.#findItemById(fields.id, items)\n                            }\n                        }\n\n                        if(Type.isObject(item))\n                        {\n                            let fields = this.#prepareBasketItemFields(item);\n\n                            fields.status = LoaderConst.status.none;\n                            this.#changeBasketItem(fields, index)\n                                .then(() =>\n                                    {\n                                        if(typeAction === PoolConst.action.restore)\n                                        {\n                                            EventEmitter.emit(EventType.basket.restoreProduct, {index})\n                                        }\n                                    }\n                                );\n                        }\n                    }\n                });\n\n                if(Type.isObject(data) && Type.isObject(data.orderPriceTotal))\n                {\n                    this.#refreshModelBasketTotal(data);\n                    this.#refreshModelBasketDiscount(data);\n                }\n            }\n\n            resolve();\n        });\n    }\n\n    #hasErrorAction(action)\n    {\n        return action.hasOwnProperty('errors')\n    }\n\n    #getAction(actions, index)\n    {\n        return actions.hasOwnProperty(index) ? actions[index] : null\n    }\n\n    #getErrorsAction(actions, index)\n    {\n        let action = this.#getAction(actions, index)\n\n        if(action !== null)\n        {\n            return action.hasOwnProperty('errors') ? action.errors : null\n        }\n        else\n        {\n            return null\n        }\n    }\n\n    #getTypeAction(actions, index)\n    {\n        const types = Object.values(PoolConst.action);\n        let action = this.#getAction(actions, index)\n\n        if(action !== null)\n        {\n            let type = action.type.toString();\n            return types.includes(type) ? type : null;\n        }\n        return null;\n    }\n\n    #hasActionInPool(index, type, poolList)\n    {\n        let item = poolList.hasOwnProperty(index) ? poolList[index]:null;\n        if(Type.isArray(item))\n        {\n            return this.#hasActionInPoolItem(item, type);\n        }\n        return false;\n    }\n\n    #hasActionInPoolItem(item, type)\n    {\n        return item.some((item)=>item.hasOwnProperty(type))\n    }\n\n    #findItemById(id, items)\n    {\n        id = parseInt(id);\n\n        for (let index in items)\n        {\n            if (!items.hasOwnProperty(index))\n            {\n                continue;\n            }\n\n            items[index].id = parseInt(items[index].id);\n\n            if(items[index].id === id)\n            {\n                return items[index];\n            }\n        }\n\n        return null\n    }\n\n    #changeBasketItem(fields, index)\n    {\n        return this.store.dispatch('basket/changeItem', {index, fields});\n    }\n\n    #prepareBasketItemFields(item)\n    {\n        return {\n            id: item.id,\n            name: item.name,\n            quantity: item.quantity,\n            measureText: item.measureText,\n            sum: item.sum,\n            price: item.price,\n            module: item.module,\n            productProviderClass: item.productProviderClass,\n            baseSum: item.sumBase,\n            basePrice: item.basePrice,\n            currency: item.currency,\n            discount: {\n                sum: item.sumDiscountDiff,\n                price: item.discountPrice\n            },\n            props: item.props,\n            sku: item.sku,\n            product: {\n                id: item.catalogProduct.id,\n                detailPageUrl: item.detailPageUrl,\n                picture: Type.isObject(item.catalogProduct.frontImage) ? item.catalogProduct.frontImage.src:null,\n                ratio: item.catalogProduct.ratio,\n                availableQuantity: item.catalogProduct.availableQuantity,\n                type: item.catalogProduct.type,\n\t\t\t\tcheckMaxQuantity: item.catalogProduct.checkMaxQuantity,\n            }\n        };\n    }\n\n    #refreshModelBasketTotal(data)\n    {\n        let total = data.orderPriceTotal;\n\n        this.store.dispatch('basket/setTotal', {\n            price : total.orderPrice,\n            basePrice : total.priceWithoutDiscountValue,\n        });\n    }\n\n    #refreshModelBasketDiscount(data)\n    {\n        let total = data.orderPriceTotal;\n\n        this.store.dispatch('basket/setDiscount', {\n            sum: total.basketPriceDiscountDiffValue\n        });\n    }\n\n    handleSaveOrderSuccess(data)\n    {\n        EventEmitter.emit(EventType.order.success);\n\n        this.store.dispatch('application/setStage', {stage: ApplicationConst.stage.success});\n        this.store.dispatch('order/set', {\n            id: data.order.id,\n            hash: data.hash,\n            accountNumber: data.order.accountNumber\n        });\n\n        return this.#refreshModelBasket(data)\n            .then(()=>this.#refreshModelProperty(data))\n    }\n\n    #refreshModelProperty(data)\n    {\n        this.store.commit('property/clearProperty');\n\n        if(Type.isObject(data) && Type.isArray(data.properties))\n        {\n            data.properties.forEach((item, index) => {\n                let fields = {\n                    id : item.id,\n                    name : item.name,\n                    type : item.type,\n                    value : item.value[0],//TODO\n                };\n\n                this.store.dispatch('property/changeItem', {index, fields});\n            });\n        }\n    }\n\n    #refreshModelBasket(data)\n    {\n        return new Promise((resolve, reject) => {\n\n            this.store.commit('basket/clearBasket');\n\n            if(Type.isObject(data) && Type.isArray(data.basketItems))\n            {\n                const items = data.basketItems;\n                items.forEach((item, index) => {\n                    let fields = this.#prepareBasketItemFields(item);\n                    this.#changeBasketItem(fields, index)});\n            }\n\n            if(Type.isObject(data) && Type.isObject(data.orderPriceTotal))\n            {\n                this.#refreshModelBasketTotal(data)\n                this.#refreshModelBasketDiscount(data)\n            }\n\n            resolve();\n        });\n    }\n\n\tsetModelPropertyError(properties)\n\t{\n\t\tif (Type.isArrayFilled(properties))\n\t\t{\n\t\t\tthis.store.commit('property/setErrors', properties);\n\n\t\t\tthis.store.getters['property/getProperty']\n\t\t\t.forEach((fields, index)=>\n\t\t\t{\n\t\t\t\tif (typeof properties.find(item => item.propertyId === fields.id) !== 'undefined')\n\t\t\t\t{\n\t\t\t\t\tfields.validated = PropertyConst.validate.failure;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfields.validated = PropertyConst.validate.unvalidated;\n\t\t\t\t}\n\t\t\t\tthis.store.dispatch('property/changeItem', {index, fields});\n\t\t\t})\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.store.commit('property/clearErrors');\n\n\t\t\tthis.store.getters['property/getProperty']\n\t\t\t.forEach((fields, index)=>\n\t\t\t{\n\t\t\t\tfields.validated = PropertyConst.validate.unvalidated;\n\t\t\t\tthis.store.dispatch('property/changeItem', {index, fields});\n\t\t\t})\n\t\t}\n\t}\n\n    handleSaveOrderError(errors)\n    {\n        return new Promise((resolve, reject) => {\n            if (Type.isArrayFilled(errors))\n            {\n                let general = this.#prepareGeneralErrors(errors)\n                let properties = this.#preparePropertyErrors(errors);\n\n                if(general.length > 0)\n                {\n                    this.store.commit('application/setErrors', general);\n                }\n                else\n                {\n                    this.store.commit('application/clearErrors');\n                }\n\n\t\t\t\tthis.setModelPropertyError(properties);\n            }\n        });\n    }\n\n    #prepareBasketErrors(collection, actions)\n    {\n        const result = [];\n        collection.forEach((fields, index) =>\n        {\n            let list = this.#getErrorsAction(actions, index);\n            if(list !== null)\n            {\n                result.push({list, index});\n            }\n        })\n\n        return result\n    }\n\n    #preparePropertyErrors(errors)\n    {\n        const result = [];\n\n        errors.forEach((fields)=>{\n            if(fields.code === 'PROPERTIES')\n            {\n                if (fields.hasOwnProperty('customData'))\n                {\n                    let id = parseInt(fields.customData.id)\n                    result.push({message: fields.message, propertyId: id});\n                }\n            }\n        })\n        return result;\n    }\n\n    #prepareGeneralErrors(errors)\n    {\n        const result = [];\n\n        errors.forEach((fields)=>{\n            if(parseInt(fields.code) === 0 || fields.code === 'ORDER')\n            {\n                result.push({message: fields.message})\n            }\n        })\n        return result;\n    }\n}"],"names":["BaseRestHandler","params","store","command","result","extra","split","map","element","charAt","toUpperCase","slice","join","error","data","BasketRestHandler","response","pool","Promise","resolve","reject","needFullRecalculation","EventEmitter","emit","EventType","basket","needRefresh","getters","then","isEmpty","refreshAfter","order","success","dispatch","stage","ApplicationConst","id","hash","accountNumber","properties","Type","isArrayFilled","commit","forEach","fields","index","find","item","propertyId","validated","PropertyConst","validate","failure","unvalidated","errors","general","length","setModelPropertyError","isObject","isArray","basketItems","items","collection","orderPriceTotal","actions","list","poolList","get","typeAction","isString","PoolConst","action","quantity","exists","restore","status","LoaderConst","none","removeProduct","offer","restoreProduct","hasOwnProperty","types","Object","values","type","toString","includes","some","parseInt","name","measureText","sum","price","module","productProviderClass","baseSum","sumBase","basePrice","currency","discount","sumDiscountDiff","discountPrice","props","sku","product","catalogProduct","detailPageUrl","picture","frontImage","src","ratio","availableQuantity","checkMaxQuantity","total","orderPrice","priceWithoutDiscountValue","basketPriceDiscountDiffValue","value","push","code","customData","message"],"mappings":"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"}